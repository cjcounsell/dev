#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename off

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "screen-256color"
set-option -as terminal-overrides ",xterm*:Tc"

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity off

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

set-option -sg escape-time 10

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
set-option -g status-position top

source-file "$XDG_CONFIG_HOME/tmux/theme.conf"

set -g status-justify "left"
set -g status-left-length 200   # default: 10
set -g status-right-length 200  # default: 10

set -g status-left "#[fg=#{@session_fg},bold,bg=#{@bg}] #S #[fg=#{@default_fg},nobold,bg=#{@bg}]| "
set -g status-right ""
set -g status-justify left
set -g status-style "bg=#{@bg}"
set -g window-status-format "#[fg=#{@default_fg},bg=default] #I:#W"
set -g window-status-current-format "#[fg=#{@active_window_fg},bold,bg=default]  #[underscore]#I:#(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev)"
set -g window-status-last-style "fg=#{@default_fg},bg=default"
set -g message-command-style "bg=default,fg=#{@default_fg}"
set -g message-style "bg=default,fg=#{@default_fg}"
set -g mode-style "bg=#{@session_selection_bg},fg=#{@session_selection_fg}"
set -g pane-active-border-style "fg=#{@active_pane_border},bg=default"
set -g pane-border-style "fg=brightblack,bg=default"

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf"; 

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Move the current window to the next window or previous window position
bind -r N swap-window -t +1 \; select-window -t +1
bind -r P swap-window -t -1 \; select-window -t -1

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

set -g @tpm_plugins ' \
   tmux-plugins/tpm \
   tmux-plugins/tmux-sensible \
   jimeh/tmuxifier \
'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run-shell "~/.config/tmux/plugins/tpm/tpm"
